import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";

import Navbar from "@/components/nav-bar/Navbar";
import Footer from "@/components/footer/Footer";
import { AuthProvider } from "@/context/AuthContext";
import { StoreProvider } from "@/context/StoreContext";
import { Suspense } from "react";
import AppLoader from "@/components/loader/AppLoader";
import { AlertProvider } from "@/context/AlertsContext";
import { SpeedInsights } from "@vercel/speed-insights/next";
import { Analytics } from "@vercel/analytics/react";
import { LanguageProvider } from "@/context/LanguageProvider";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});

const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Roberto Jewelry",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html>
      <head>
        <link
          href="https://fonts.googleapis.com/css2?family=Amandine&display=swap"
          rel="stylesheet"
        />
        <link
          rel="preload"
          href="/fonts/Amandine.otf"
          as="font"
          type="font/otf"
          crossOrigin="anonymous"
        />
      </head>
      <body className="flex flex-col min-h-screen font-sans">
        <SpeedInsights />
        <Analytics />
        <LanguageProvider>
          <AuthProvider>
            <StoreProvider>
              <AlertProvider>
                <Suspense fallback={<AppLoader />}>
                  <Navbar />
                  <main className="flex-1 bg-gray-100">{children}</main>
                  <Footer />
                </Suspense>
              </AlertProvider>
            </StoreProvider>
          </AuthProvider>
        </LanguageProvider>
        <script
          src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB4Wo_pnncMwI6IgtyzasYLP-H6SbW8OpA&loading=async&libraries=places"
          async
        ></script>
      </body>
    </html>
  );
}
